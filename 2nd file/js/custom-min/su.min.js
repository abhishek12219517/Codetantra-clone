var generalFontSizeMap = {
    N: "12px",
    L: "14px",
    XL: "16px"
}, editorFontSizeMap = {
    N: "13px",
    L: "15px",
    XL: "17px"
}, terminalFontSizeMap = {
    N: "12",
    L: "13",
    XL: "14"
}, textSizeExtensionMap = {
    N: "TextSizeN",
    L: "TextSizeL",
    XL: "TextSizeXL"
};

function changeTextSize(e, t) {
    var o = t;
    "editor" === e ? setEditorFontSize(ctEditorFontSize = t) : "terminal" === e ? (ctTerminalFontSize = t, 
    consoleTerm.options.fontSize = t) : (ctGeneralFontSize = t, $("#modalBody").css("font-size", t)), 
    $("." + e + "FontSize ").removeClass("btn-primary"), $("#" + e + o).addClass("btn-primary");
}

function setEditorFontSize(o) {
    $.each($(".codingEditorClass"), function(e, t) {
        $(t).data("editor").setFontSize(o);
    });
}

function launchUISettings() {
    pauseMedia(), $(".generalFontSize").removeClass("btn-primary"), $(".editorFontSize").removeClass("btn-primary"), 
    $(".terminalFontSize").removeClass("btn-primary"), $("#general" + textSizeExtensionMap[ctGeneralFontSize]).addClass("btn-primary"), 
    $("#editor" + textSizeExtensionMap[ctEditorFontSize]).addClass("btn-primary"), 
    $("#terminal" + textSizeExtensionMap[ctTerminalFontSize]).addClass("btn-primary"), 
    $("#uiSettingsModalDialog").modal({
        show: !0,
        keyboard: !0,
        backdrop: !1
    });
}

function closeUISettingsDialog() {
    $("#uiSettingsModalDialog").modal("hide"), $("#uiSettingsModalDialog").off("hidden.bs.modal"), 
    $("#uiSettingsModalDialog").on("hidden.bs.modal", function() {
        $("body").addClass("modal-open");
    });
}

function saveUserSettings() {
    var e = $(".questionText").css("font-size"), e = {
        generalFontSize: e,
        editorFontSize: e,
        terminalFontSize: parseInt(e)
    };
    globalEditorObj ? e.editorTheme = globalEditorObj.getTheme() : e.editorTheme = ctEditorTheme;
    var t = $.ajax({
        type: "POST",
        url: "/secure/rest/usu/suu",
        headers: jsonHeaders,
        dataType: "json",
        data: JSON.stringify({
            userSettings: {
                fontSettings: e
            }
        })
    });
    t.done(function(e) {
        "0" !== e.result && alertify_log("Could not save changes. Please contact support@codetantra.com if the problem persists.", "error", 8e3);
    }), t.fail(function() {
        t.getResponseHeader("X-SessionTimeout") ? openLoginDialog() : alertify.log("Could not save...[please see the console]", "error", 8e3);
    });
}
//# sourceMappingURL=su.min.js.map